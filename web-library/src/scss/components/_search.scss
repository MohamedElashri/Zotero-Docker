//
// Search
// --------------------------------------------------

.input-group.search {
	.dropdown {
		position: absolute;
		left: 6px;
		top: 4px;
		z-index: $z-index-menu; // We need to set the z-index here because the dropdown-menu expects a static wrapper
	}

	.dropdown-toggle {
		padding: 0 2px; // Simulate outline-offset
		border-radius: 0;
	}

	.icon-search-options {
		@include touch-or-bp-down(sm) {
			color: $icon-color; // Reset
		}
	}

	.form-control {
		@include touch-or-bp-down(sm) {
			min-height: auto; // Reset
			padding: 4px 25px 4px $input-btn-padding-x-touch;
			border: $input-border-width solid $input-border-color; // …
			background-color: $input-bg; // …
			border-radius: $input-btn-border-radius;
		}

		@include touch-keyboard-or-bp-down(sm) {
			&:focus {
				border: $input-border-width solid $focus-color;
				box-shadow: 0 0 0 $input-btn-focus-width $focus-color;
			}
		}
	}

	.clear {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		right: $space-xs + $border-width;
		width: $space-md;
		height: $space-md;
		border: none;
		padding: 0;
		border-radius: 50%;
		background-color: $icon-color;

		html:not(.specifity).keyboard & {
			&:focus {
				border-color: $icon-color;
				box-shadow: 0 0 0 $input-btn-focus-width $icon-color;
				outline: none;
			}
		}

		@include mouse-and-bp-up(md) {
			&:active {
				background-color: $icon-active-color;
			}
		}

		.icon {
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
			color: $input-bg;

			@include state(".clear:active .icon") {
				color: $input-bg;
			}
		}
	}
}
