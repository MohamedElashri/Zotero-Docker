//
// React-modal
//

.ReactModal__Body--open {
	overflow: hidden;
}

.modal-backdrop {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	background-color: $modal-backdrop-bg;
	overflow-y: auto;
	-webkit-overflow-scrolling: touch; // Momentum scrolling for iOS 10–
	z-index: $z-index-modal;

	@include bp-down(xs) {
		overflow-y: hidden;
	}
}

.modal {
	width: auto;

	@include bp-down(xs) {
		height: 100%;
	}

	@include bp-up(sm) {
		max-width: $modal-md;
		margin: $space-xl auto;
	}

	&.loading {
		display: flex;
		justify-content: center;
		align-items: center;
		height: calc(100% - 2 * #{$space-xs});

		@include bp-up(md) {
			height: calc(100% - 2 * #{$space-xl});
		}

		.icon-spin {
			color: $modal-icon-spin-color;
		}
	}

	&-lg {
		@include bp-up(sm) {
			width: $modal-lg;
			max-width: calc(100% - 2 * #{$space-xl});
		}
	}

	&-xl {
		@include bp-up(sm) {
			width: $modal-xl;
			max-width: calc(100% - 2 * #{$space-xl});
		}
	}
}

.modal-content {
	width: 100%;

	@include bp-down(xs) {
		height: 100%;
	}

	@include bp-up(sm) {
		border-radius: $modal-border-radius;
		overflow: hidden;
	}

	.modal-scrollable & {
		@include bp-up(sm) {
			display: flex;
			flex-direction: column;
			max-height: calc(100vh - 2 * #{$space-xl});
		}
	}
}

@each $element in header, footer {
	.modal-#{$element} {
		flex: 0 0 auto;
		display: flex;
		align-items: center;
		padding-left: $modal-inner-padding;
		padding-right: $modal-inner-padding;

		@include touch-or-bp-down(sm) {
			height: $modal-header-height + $border-width;
			background-color: $modal-touch-header-bg;

			&-left,
			&-right {
				flex: 1 0 0;
			}

			&-center {
				flex: 2 0 0;
				max-width: 50%;
				text-align: center;
			}

			&-right {
				text-align: right;
			}
		}

		@include mouse-and-bp-up(md) {
			padding-top: $modal-inner-padding;
			padding-bottom: $modal-inner-padding;
			background-color: $modal-content-bg;
		}

		.modal-form & {
			@include touch-or-bp-down(sm) {
				background-color: $modal-form-header-bg;
			}
		}
	}
}

.modal-header {
	padding-bottom: $border-width;

	@include touch-or-bp-down(sm) {
		@include hairline(bottom, $modal-border-color-touch);
	}

	@include mouse-and-bp-up(md) {
		justify-content: space-between;
		border-bottom: $border-width solid $modal-border-color;
	}

	.close {
		@include mouse-and-bp-up(md) {
			padding: $space-min + $input-border-width + $modal-inner-padding / 2;
			margin: -$modal-inner-padding / 2;
			margin-right: -$modal-inner-padding / 2 + 2px; // Even spacing
		}
	}
}

.modal-title {
	@include mouse-and-bp-up(md) {
		font-size: $modal-title-font-size;
	}
}

.modal-body {
	padding: $modal-inner-padding;
	background-color: $modal-content-bg; // Set content-bg on header, body, and footer explicitly for better border-radius rendering (focus border)

	@include bp-down(xs) {
		height: calc(100% - #{$modal-header-height});
		overflow-y: auto;
		-webkit-overflow-scrolling: touch; // Momentum scrolling for iOS
	}

	.modal-scrollable & {
		overflow-y: auto;
		-webkit-overflow-scrolling: touch; // Momentum scrolling for iOS 10–

		&:focus {
			.keyboard & {
				outline: none;
				border: $outline-width solid $focus-color;
			}
		}
	}

	.modal-form & {
		@include touch-or-bp-down(sm) {
			background-color: $form-bg-touch;
		}
	}
}

.modal-footer {
	padding-top: $border-width;

	@include touch-or-bp-down(sm) {
		@include hairline(top, $modal-border-color-touch);
	}

	@include mouse-and-bp-up(md) {
		border-top: $border-width solid $modal-border-color;
	}

	> .btn {
		&:not(:first-child) {
			margin-left: $space-sm / 2;
		}

		&:not(:last-child) {
			margin-right: $space-sm / 2;
		}
	}
}

.modal-centered {
	display: flex;
	align-items: center;
	min-height: 100%;

	@include bp-up(sm) {
		min-height: calc(100% - #{2 * $space-xl});
	}
}

.modal-scrollbar-measure {
	position: absolute;
	top: -9999px;
	width: 50px;
	height: 50px;
	overflow: scroll;
}

.modal-slide {
	&.ReactModal {
		&__Overlay {
			@include touch-or-bp-down(sm) {
				opacity: 0;
			}

			.modal-content {
				@include touch-or-bp-down(sm) {
					transform: translate3d(0, 100%, 0);
				}
			}

			&--after-open {
				@include touch-or-bp-down(sm) {
					opacity: 1;
					transition: opacity $nav-transition;
				}

				.modal-content {
					@include touch-or-bp-down(sm) {
						transform: translate3d(0, 0, 0);
						transition: transform $nav-transition;
					}
				}
			}

			&--before-close {
				@include touch-or-bp-down(sm) {
					opacity: 0;
					transition: opacity $modal-exit-transition-xs;
				}

				.modal-content {
					@include touch-or-bp-down(sm) {
						transform: translate3d(0, 100%, 0);
						transition: transform $modal-exit-transition-xs;
					}
				}
			}
		}
	}
}
