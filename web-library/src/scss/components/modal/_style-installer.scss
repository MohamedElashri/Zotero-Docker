//
// Style installer
//

.style-installer {
	.modal-body {
		padding-top: 0;
		padding-bottom: 0;

		&:focus {
			.keyboard & {
				padding-left: $modal-inner-padding - $outline-width;
				padding-right: $modal-inner-padding - $outline-width;
				border-bottom-left-radius: $modal-border-radius;
				border-bottom-right-radius: $modal-border-radius;
			}
		}
	}

	.style-search {
		position: sticky;
		top: 0;
		z-index: $z-index-search-bar;
		padding: $modal-inner-padding 0;
		background-color: $modal-content-bg;

		@include touch-or-bp-down(sm) {
			margin-left: -$modal-inner-padding;
			margin-right: -$modal-inner-padding;
			padding-left: $modal-inner-padding;
			padding-right: $modal-inner-padding;
		}

		@include state(".keyboard .style-installer .modal-body:focus") {
			padding-top: $modal-inner-padding - $outline-width;
		}
	}

	.style-list {
		margin-bottom: $modal-inner-padding;

		@include mouse-and-bp-up(md) {
			padding: 0 $space-xs;
		}

		&:empty {
			display: none;
		}

		@include state(".keyboard .style-installer .modal-body:focus") {
			margin-bottom: $modal-inner-padding - $outline-width;
		}

		.style {
			display: flex;
			justify-content: space-between;
			align-items: center;
			padding: $space-xs 0;

			@include touch-or-bp-down(sm) {
				@include hairline(top, $shade-4, $start: ($space-lg + $default-padding-x-touch), $end: -16px);
				padding-top: $space-xs + $border-width;
			}

			@include mouse-and-bp-up(md) {
				border-top: $border-width solid $modal-border-color;
			}

			&:first-child {
				@include touch-or-bp-down(sm) {
					@include hairline-disabled(top);
					padding-top: $space-xs;
				}

				@include mouse-and-bp-up(md) {
					border-top: none;
				}
			}

			.style-title {
				flex: 1 1 auto;
			}

			.btn {
				flex: 0 0 auto;

				@include touch-or-bp-down(sm) {
					order: -1;
					margin-right: $default-padding-x-touch;
				}

				@include mouse-and-bp-up(md) {
					min-width: 70px;
				}
			}
		}
	}
}
