diff --git a/browser/app/nsBrowserApp.cpp b/browser/app/nsBrowserApp.cpp
index db2eb9637c57..a75b380f9424 100644
--- a/browser/app/nsBrowserApp.cpp
+++ b/browser/app/nsBrowserApp.cpp
@@ -151,7 +151,13 @@ Bootstrap::UniquePtr gBootstrap;
 static int do_main(int argc, char* argv[], char* envp[]) {
   // Allow firefox.exe to launch XULRunner apps via -app <application.ini>
   // Note that -app must be the *first* argument.
-  const char* appDataFile = getenv("XUL_APP_FILE");
+  UniqueFreePtr<char> iniPath = BinaryPath::GetApplicationIni();
+  if (!iniPath) {
+	  Output("Couldn't find application.ini.\n");
+	  return 255;
+
+  }
+  char *appDataFile = iniPath.get();
   if ((!appDataFile || !*appDataFile) && (argc > 1 && IsArg(argv[1], "app"))) {
     if (argc == 2) {
       Output("Incorrect number of arguments passed to -app");
diff --git a/xpcom/build/BinaryPath.h b/xpcom/build/BinaryPath.h
index 4721c5b5b36d..5269bd75c7b3 100644
--- a/xpcom/build/BinaryPath.h
+++ b/xpcom/build/BinaryPath.h
@@ -261,6 +261,33 @@ class BinaryPath {
     return result;
   }
 
+  static UniqueFreePtr<char> GetApplicationIni() {
+	char path[MAXPATHLEN];
+	if (NS_FAILED(Get(path))) {
+		return nullptr;
+	}
+
+	char *c = path + strlen(path);
+	while (c >= path && *c != '\\' && *c != '/') {
+		*c = NULL;
+		c--;
+	}
+
+	if (c < path) {
+		return nullptr;
+	}
+
+	char iniPath[MAXPATHLEN];
+	int n = snprintf(iniPath, MAXPATHLEN, "%sapplication.ini", path);
+	if (n < 0 || n >= MAXPATHLEN) {
+		return nullptr;
+	}
+
+	UniqueFreePtr<char> result;
+	result.reset(strdup(iniPath));
+	return result;
+  }
+
 #ifdef MOZILLA_INTERNAL_API
   static nsresult GetFile(nsIFile** aResult) {
     nsCOMPtr<nsIFile> lf;
